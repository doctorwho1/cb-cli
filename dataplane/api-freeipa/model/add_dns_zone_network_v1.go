// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AddDNSZoneNetworkV1 add Dns zone network v1
// swagger:model AddDnsZoneNetworkV1
type AddDNSZoneNetworkV1 struct {

	// network Id
	NetworkID string `json:"networkId,omitempty"`

	// subnet ids
	// Unique: true
	SubnetIds []string `json:"subnetIds"`
}

// Validate validates this add Dns zone network v1
func (m *AddDNSZoneNetworkV1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSubnetIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AddDNSZoneNetworkV1) validateSubnetIds(formats strfmt.Registry) error {

	if swag.IsZero(m.SubnetIds) { // not required
		return nil
	}

	if err := validate.UniqueItems("subnetIds", "body", m.SubnetIds); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AddDNSZoneNetworkV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AddDNSZoneNetworkV1) UnmarshalBinary(b []byte) error {
	var res AddDNSZoneNetworkV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
